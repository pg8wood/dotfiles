#!/bin/bash

# Strip out ".xcodeproj" extension to enable tab completion for this script in the ios-register repo
module_name=${1%.xcodeproj}
shift # Remove module name argument from the list of arguments

# Capture any additional arguments passed after the module name
additional_args="$@"

# Run build script,
build_project() {
    sq gen "$module_name" -a -n "$module_name" $additional_args 2>&1 | tee /tmp/build_output.log
}

# Run the build function
build_project

# Check if the build output contains the gem/pod error
if grep -qE "Could not find.*in locally installed gems" /tmp/build_output.log; then
    echo "Detected missing gems. Running bundle install..."
    bundle install

    # Retry the build after installing gems
    build_project

    # Check again if it fails a second time
    if grep -qE "Could not find.*in locally installed gems" /tmp/build_output.log; then
        echo "Retry failed. Please check gem dependencies manually."
        exit 1
    else
        echo "Build succeeded after installing missing gems."
    fi
else
    echo "Build succeeded."
fi

# 3. Trigger Run in Xcode once indexing is ready
echo -e "\nWaiting for Xcode indexing to finish so we can Run..."

osascript <<'END'
tell application "System Events"
    tell process "Xcode"
        -- Wait until the Run menu item is enabled
        repeat until (enabled of menu item "Run" of menu "Product" of menu bar 1) is true
            delay 1
        end repeat
        click menu item "Run" of menu "Product" of menu bar 1
    end tell
end tell
END

echo "Run triggered in Xcode ðŸš€"

# Cleanup temporary file
rm /tmp/build_output.log
