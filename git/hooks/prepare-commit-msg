#!/bin/bash

# Rename this file to `prepare-commit-msg` to enable this hook
#
# Automatically prefix a commit message with ticket numbers within the branch name
#
# How it works:
#
# 1. Inspects the current branch name and checks if it contains ticket numbers
# 2. If it does, the commit message will be prepended with all ticket numbers found.
#
# Usage:
#
# For an individual repository:
# - Save it as `prepare-commit-msg` within `.git/hooks/` folder of the repository.
#
# Globally for all repositories:
# - Save it as `prepare-commit-msg` in the default hooks folder where git is installed on your machine.
# OR
# - Save it as `prepare-commit-msg` at any location on your machine.
# - Configure git to use it globally using the following command: git config --global core.hooksPath 'path/to/hooks'
#
# Important:
# - Make sure the saved script is executable
# - The script should not have an extension

echo "preapring commit message"

BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
TICKET_PATTERN='([A-Z]{2,6}-[0-9]{1,4})+'

TICKETS=()

while [[ $BRANCH_NAME =~ $TICKET_PATTERN ]]; do
    TICKET=${BASH_REMATCH[0]}

    # Add ticket to the beginning of the list
    TICKETS=($TICKET ${TICKETS[@]})

    # Remove the match from string
    BRANCH_NAME=${BRANCH_NAME#*"$TICKET"}
done

if [ ${#TICKETS[@]} -eq 0 ]; then
  exit 0
else
  for TICKET in ${TICKETS[@]}; do
    # Test to see if ticket is already included in the commit message
    TICKET_IN_COMMIT=$(grep -c "$TICKET" $1)

    # Add the ticket to the commit message
    if ! [[ $TICKET_IN_COMMIT -ge 1 ]]; then
      sed -i.bak -e "1s~^~$TICKET ~" $1
    fi
  done
fi
